{"input":{"ourVersion":"1.19.3","commit":"7c4205b5c6e52a53b81c69d2b2dc8a627abaa0ba","locale":"fr","devMode":false,"absoluteFolderPath":"/root/.vscode/extensions","isBuiltin":false,"mtime":1524083314018},"result":[{"name":"php-debug","displayName":"PHP Debug","version":"1.12.3","publisher":"felixfbecker","license":"MIT","description":"Debug support for PHP with XDebug","keywords":["php","debug","xdebug"],"author":{"name":"Felix Becker","email":"felix.b@outlook.com"},"engines":{"vscode":"^1.6.0","node":">=6.0.0"},"icon":"images/logo.png","galleryBanner":{"color":"#6682BA","theme":"dark"},"categories":["Debuggers"],"repository":{"type":"git","url":"https://github.com/felixfbecker/vscode-php-debug.git"},"bugs":{"url":"https://github.com/felixfbecker/vscode-php-debug/issues"},"dependencies":{"file-url":"^2.0.0","iconv-lite":"^0.4.15","minimatch":"^3.0.3","moment":"^2.17.1","url-relative":"^1.0.0","urlencode":"^1.1.0","vscode-debugadapter":"^1.11.0","vscode-debugprotocol":"^1.11.0","xmldom":"^0.1.22"},"devDependencies":{"@semantic-release/git":"^2.2.0","@semantic-release/github":"^2.0.0","@types/chai":"4.0.6","@types/chai-as-promised":"^7.1.0","@types/file-url":"^2.0.0","@types/minimatch":"^3.0.1","@types/mocha":"^2.2.44","@types/node":"7.0.32","@types/semver":"^5.4.0","@types/xmldom":"^0.1.29","chai":"^4.0.2","chai-as-promised":"^7.0.0","husky":"^0.14.3","mocha":"^5.0.0","nyc":"^11.0.2","prettier":"1.9.2","semantic-release":"^12.2.2","semantic-release-vsce":"^2.0.0","semver":"^5.3.0","tslint":"^5.4.3","tslint-config-prettier":"^1.6.0","typescript":"^2.1.4","validate-commit-msg":"^2.14.0","vsce":"^1.28.0","vscode-debugadapter-testsupport":"^1.11.0"},"release":{"verifyConditions":["semantic-release-vsce","@semantic-release/github"],"getLastRelease":"@semantic-release/git","publish":[{"path":"semantic-release-vsce","packageVsix":"php-debug.vsix"},{"path":"@semantic-release/github","assets":"php-debug.vsix"}]},"greenkeeper":{"ignore":["@types/node"]},"scripts":{"build":"tsc -p .","watch":"tsc -w -p .","start":"code testproject --extensionDevelopmentPath=.","test":"mocha out/test --timeout 20000 --slow 1000 --retries 4","cover":"nyc --all mocha out/test --timeout 20000 --slow 1000 --retries 4","lint":"npm run tslint && npm run prettier","tslint":"tslint -c tslint.json 'src/**/*.ts'","prettier":"prettier \"**/{*.json,*.ts,.prettierrc}\" --write --list-different","semantic-release":"semantic-release","commitmsg":"validate-commit-msg"},"nyc":{"include":["out/**/*.js"],"exclude":["out/test/**/*.js"]},"contributes":{"debuggers":[{"type":"php","label":"PHP","enableBreakpointsFor":{"languageIds":["php"]},"program":"./out/phpDebug.js","runtime":"node","configurationAttributes":{"launch":{"required":[],"properties":{"program":{"type":"string","description":"Absolute path to the program."},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":false},"externalConsole":{"type":"boolean","description":"Launch debug target in external console.","default":false},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. Default is the current workspace.","default":"${workspaceRoot}"},"runtimeExecutable":{"type":"string","description":"Absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.","default":"php"},"runtimeArgs":{"type":"array","description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"default":[]},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program.","default":{}},"port":{"type":"number","description":"Port on which to listen for XDebug","default":9000},"serverSourceRoot":{"type":"string","description":"Deprecated: The source root when debugging a remote host","deprecationMessage":"Property serverSourceRoot is deprecated, please use pathMappings to define a server root."},"localSourceRoot":{"type":"string","description":"Deprecated: The source root on this machine that is the equivalent to the serverSourceRoot on the server.","deprecationMessage":"Property localSourceRoot is deprecated, please use pathMappings to define a local root."},"pathMappings":{"type":"object","default":{},"description":"A mapping of server paths to local paths."},"ignore":{"type":"array","items":"string","description":"Array of glob patterns that errors should be ignored from","default":["**/vendor/**/*.php"]},"log":{"type":"boolean","description":"If true, will log all communication between VS Code and the adapter"},"xdebugSettings":{"type":"object","properties":{"max_children":{"type":"integer","description":"max number of array or object children to initially retrieve"},"max_data":{"type":"integer","description":"max amount of variable data to initially retrieve"},"show_hidden":{"enum":[0,1],"description":"This feature can get set by the IDE if it wants to have more detailed internal information on properties (eg. private members of classes, etc.) Zero means that hidden members are not shown to the IDE"}},"description":"Overrides for XDebug remote debugging settings. See https://xdebug.org/docs-dbgp.php#feature-names","default":{}}}}},"initialConfigurations":[{"name":"Listen for XDebug","type":"php","request":"launch","port":9000},{"name":"Launch currently open script","type":"php","request":"launch","program":"${file}","cwd":"${fileDirname}","port":9000}]}]},"uuid":"044b4b31-2969-4af3-895d-855433b8b46d","isBuiltin":false,"id":"felixfbecker.php-debug","extensionFolderPath":"/root/.vscode/extensions/felixfbecker.php-debug-1.12.3"},{"private":true,"name":"reasonml","displayName":"OCaml and Reason IDE","description":"OCaml and Reason language support","version":"1.0.26","publisher":"freebroccolo","license":"Apache-2.0","bugs":{"url":"https://github.com/freebroccolo/vscode-reasonml/issues"},"repository":{"type":"git","url":"https://github.com/freebroccolo/vscode-reasonml.git"},"engines":{"vscode":"^1.19.0"},"categories":["Formatters","Languages","Linters","Snippets"],"keywords":["ocaml","reason","ide","lsp","merlin"],"icon":"assets/logo.png","activationEvents":["onLanguage:ocaml","onLanguage:reason"],"main":"/root/.vscode/extensions/freebroccolo.reasonml-1.0.26/out/src/extension","contributes":{"commands":[{"command":"reason.caseSplit","title":"Reason: Case Split"},{"command":"reason.showMerlinFiles","title":"Reason: Show Merlin Files"},{"command":"reason.showAvailableLibraries","title":"Reason: Show Libraries Available via Dependencies"},{"command":"reason.showProjectEnv","title":"Reason: Show Environment"}],"configuration":{"type":"object","title":"Reason configuration","properties":{"reason.codelens.unicode":{"type":"boolean","default":true,"description":"Enable the use of unicode symbols in codelens."},"reason.codelens.enabled":{"type":"boolean","default":true,"description":"Specifies whether the code lens is shown."},"reason.debounce.linter":{"oneOf":[{"type":"integer"},{"enum":["Infinity"]}],"default":500,"description":"How long to idle (in milliseconds) after keypresses before refreshing linter diagnostics. Smaller values refresh diagnostics more quickly."},"reason.diagnostics.tools":{"type":"array","items":{"enum":["merlin","bsb"]},"default":["merlin"],"maxItems":2,"uniqueItems":true,"description":"Specifies which tool or tools will be used to get diagnostics. If you choose both \"merlin\" and \"bsb\", merlin will be used while editing and bsb when saving."},"reason.format.width":{"type":["number",null],"default":null,"description":"Set the width of lines when formatting code with refmt"},"reason.path.bsb":{"type":"string","default":"bsb","description":"The path to the `bsb` binary."},"reason.path.ocamlfind":{"type":"string","default":"ocamlfind","description":"The path to the `ocamlfind` binary."},"reason.path.esy":{"type":"string","default":"esy","description":"The path to the `esy` binary."},"reason.path.env":{"type":"string","default":"env","description":"The path to the `env` command which prints the language server environment for debugging editor issues."},"reason.path.ocamlmerlin":{"type":"string","default":"ocamlmerlin","description":"The path to the `ocamlmerlin` binary."},"reason.path.opam":{"type":"string","default":"opam","description":"The path to the `opam` binary."},"reason.path.rebuild":{"type":"string","default":"rebuild","description":"The path to the `rebuild` binary."},"reason.path.refmt":{"type":"string","default":"refmt","description":"The path to the `refmt` binary."},"reason.path.refmterr":{"type":"string","default":"refmterr","description":"The path to the `refmterr` binary."},"reason.path.rtop":{"type":"string","default":"rtop","description":"The path to the `rtop` binary."},"reason.server.languages":{"type":"array","items":{"enum":["ocaml","reason"]},"default":["ocaml","reason"],"maxItems":2,"uniqueItems":true,"description":"The list of languages enable support for in the language server."}}},"grammars":[{"language":"ocaml","scopeName":"source.ocaml","path":"./syntaxes/ocaml.json"},{"language":"ocaml.hover.info","scopeName":"source.ocaml.hover.info","path":"./syntaxes/ocaml-hover-info.json"},{"language":"ocaml.hover.type","scopeName":"source.ocaml.hover.type","path":"./syntaxes/ocaml-hover-type.json"},{"language":"ocaml.merlin","scopeName":"source.ocaml.merlin","path":"./syntaxes/merlin.json"},{"language":"ocaml.ocamlbuild","scopeName":"source.ocaml.ocamlbuild","path":"./syntaxes/ocamlbuild.json"},{"language":"ocaml.opam","scopeName":"source.ocaml.opam","path":"./syntaxes/opam.json"},{"language":"reason","scopeName":"source.reason","path":"./syntaxes/reason.json"},{"language":"reason.hover.info","scopeName":"source.reason.hover.info","path":"./syntaxes/reason-hover-info.json"},{"language":"reason.hover.signature","scopeName":"source.reason.hover.signature","path":"./syntaxes/reason-hover-signature.json"},{"language":"reason.hover.type","scopeName":"source.reason.hover.type","path":"./syntaxes/reason-hover-type.json"}],"languages":[{"id":"ocaml","aliases":["OCaml"],"extensions":[".ml",".mli"],"configuration":"./ocaml.configuration.json"},{"id":"ocaml.hover.info"},{"id":"ocaml.hover.type"},{"id":"ocaml.merlin","aliases":["Merlin"],"extensions":["merlin"]},{"id":"ocaml.ocamlbuild","aliases":["OCamlbuild"],"extensions":["_tags"]},{"id":"ocaml.opam","aliases":["OPAM"],"extensions":["opam"]},{"id":"reason","aliases":["Reason"],"extensions":[".re",".rei"],"configuration":"./reason.configuration.json"},{"id":"reason.hover.info"},{"id":"reason.hover.signature"},{"id":"reason.hover.type"}],"menus":{"editor/context":[{"command":"reason.caseSplit","group":"reason","when":"editorTextFocus && resourceLangId == reason"}]},"snippets":[{"language":"reason","path":"./snippets/reason.json"}],"problemMatchers":[{"name":"ocamlc","fileLocation":["relative","${workspaceFolder}"],"pattern":[{"regexp":"^\\s*\\bFile\\b\\s*\"(.*)\",\\s*\\bline\\b\\s*(\\d+),\\s*\\bcharacters\\b\\s*(\\d+)-(\\d+)\\s*:\\s*$","file":1,"line":2,"column":3,"endColumn":4},{"regexp":"^(?:\\s*\\bParse\\b\\s*)?\\s*\\b([Ee]rror|Warning)\\b\\s*(?:\\(\\s*\\bwarning\\b\\s*(\\d+)\\))?\\s*:\\s*(.*)$","severity":1,"code":2,"message":3}]}]},"scripts":{"build":"tsc -p ./ && node script/syntax.js","format":"./node_modules/.bin/prettier --write \"src/**/*.ts\"","lint":"tslint --project tsconfig.json","postinstall":"node ./node_modules/vscode/bin/install","prebuild":"npm run format && npm run lint","vscode:prepublish":"node script/syntax.js"},"devDependencies":{"@types/node":"9.4.0","@types/pegjs":"0.10.0","prettier":"1.10.2","tslint":"5.9.1","typescript":"2.7.1","vscode":"1.1.10"},"dependencies":{"ocaml-language-server":"1.0.26","pegjs":"0.10.0","vscode-jsonrpc":"3.5.0","vscode-languageclient":"3.5.0","vscode-languageserver":"3.5.0","vscode-languageserver-protocol":"3.5.0"},"extensionDependencies":["patrys.vscode-code-outline"],"uuid":"c7ccccce-e272-43df-883f-91f3de932890","isBuiltin":false,"id":"freebroccolo.reasonml","extensionFolderPath":"/root/.vscode/extensions/freebroccolo.reasonml-1.0.26"},{"name":"opa","displayName":"Opa (OCAML)","description":"Opa OCAML-based syntax language support in VSCode","icon":"images/opa-logo.png","version":"0.0.3","publisher":"gogson","galleryBanner":{"color":"#27AEB6","theme":"dark"},"engines":{"vscode":"^1.5.0"},"categories":["Languages"],"contributes":{"languages":[{"id":"opa","aliases":["Opa","opa"],"extensions":[".opa"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"opa","scopeName":"source.opa","path":"./syntaxes/opa.tmLanguage"}]},"uuid":"b7d09c90-8635-4900-8484-d867125e7c41","isBuiltin":false,"id":"gogson.opa","extensionFolderPath":"/root/.vscode/extensions/gogson.opa-0.0.3"},{"private":true,"name":"ocaml","displayName":"OCaml","description":"Rich OCaml language support for Visual Studio Code","version":"0.6.43","publisher":"hackwaly","icon":"images/colour-icon.png","engines":{"vscode":"^1.6.0"},"repository":{"type":"git","url":"https://github.com/hackwaly/vscode-ocaml"},"categories":["Languages","Linters","Debuggers"],"activationEvents":["onCommand:ocaml.switch_mli_ml","onCommand:ocaml.repl","onCommand:ocaml.repl_send","onCommand:ocaml.repl_send_all","onCommand:ocaml.repl_send_stmt","onCommand:ocaml.restart_merlin","onCommand:ocaml.opam_switch","onLanguage:ocaml","onLanguage:ocamllex","onLanguage:menhir"],"main":"/root/.vscode/extensions/hackwaly.ocaml-0.6.43/out/src/extension","contributes":{"languages":[{"id":"ocaml","aliases":["OCaml"],"extensions":[".ml",".mli"],"filenames":[".ocamlinit"],"configuration":"./ocaml.configuration.json"},{"id":"ocamllex","aliases":["OCamllex"],"extensions":[".mll"],"configuration":"./ocamllex.configuration.json"},{"id":"menhir","aliases":["Menhir","OCamlyacc"],"extensions":[".mly"],"configuration":"./menhir.configuration.json"}],"problemMatchers":[{"name":"ocamlc","owner":"ocaml","fileLocation":"relative","pattern":[{"regexp":"^File \"(.*)\", line (\\d+)(?:, characters (\\d+)-(\\d+))?:$","file":1,"line":2,"column":3,"endColumn":4},{"regexp":"^(?:(?:Parse\\s+)?(Warning|[Ee]rror)(?:\\s+\\d+)?:)?\\s+(.*)$","severity":1,"message":2,"loop":true}]}],"commands":[{"category":"OCaml","command":"ocaml.switch_mli_ml","title":"Switch Signature/Implementation"},{"category":"OCaml","command":"ocaml.repl","title":"New REPL Session"},{"category":"OCaml","command":"ocaml.repl_send","title":"Send Selection to REPL Session"},{"category":"OCaml","command":"ocaml.repl_send_all","title":"Send File to REPL Session"},{"category":"OCaml","command":"ocaml.repl_send_stmt","title":"Send Selection as Statement to REPL Session"},{"category":"OCaml","command":"ocaml.restart_merlin","title":"Restart Merlin Session"},{"category":"OCaml","command":"ocaml.opam_switch","title":"Opam Switch"}],"grammars":[{"language":"ocaml","scopeName":"source.ocaml","path":"./syntaxes/OCaml.tmLanguage"},{"language":"ocamllex","scopeName":"source.ocamllex","path":"./syntaxes/OCamllex.tmLanguage"},{"language":"menhir","scopeName":"source.menhir","path":"./syntaxes/Menhir.tmLanguage"}],"snippets":[{"language":"menhir","path":"./snippets/menhir.json"}],"debuggers":[{"type":"ocamldebug","label":"OCaml","program":"./out/src/debug/debug.js","runtime":"node","enableBreakpointsFor":{"languageIds":["ocaml","ocamllex","menhir"]},"initialConfigurations":[{"name":"OCaml","type":"ocamldebug","request":"launch","program":"${workspaceRoot}/main.d.byte","console":"internalConsole","stopOnEntry":false}],"configurationAttributes":{"launch":{"required":["program"],"properties":{"cd":{"type":"string","description":"The working directory for ocamldebug."},"includePath":{"type":"array","items":{"type":"string"},"description":"The list of include directories for ocamldebug."},"console":{"enum":["internalConsole","integratedTerminal","externalTerminal"],"description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","default":"internalConsole"},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program.","default":{}},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceRoot}/.env"},"noDebug":{"type":"boolean","default":false},"program":{"type":"string","description":"The path of program to debug."},"arguments":{"type":"array","items":{"type":"string"},"description":"The command-line arguments for the program."},"stopOnEntry":{"type":"boolean","description":"Automatically stop after launch.","default":false},"socket":{"type":"string","description":"The socket name or address for remote debug."},"symbols":{"type":"string","description":"The path to OCaml debug symbols *.cds file."},"script":{"type":"string","description":"The path to the debug script which you wish to run after debug session established."},"encoding":{"type":"string","description":"The encoding which program's stdout/stderr used.","default":"utf-8"},"ocamldebugEncoding":{"type":"string","description":"The encoding which ocamldebug's stdout/stderr used.","default":"utf-8"},"_showLogs":{"type":"boolean","description":"Show logs which debugAdapter produced in debug window. Useful for debug debugAdapter.","default":false}}}}}],"configuration":{"type":"object","title":"OCaml configuration","properties":{"ocaml.opamPath":{"type":"string","default":"opam","description":"Path to opam."},"ocaml.useOpamToResolve":{"type":"boolean","default":false,"description":"Use opam to resolve executable paths this extension needs."},"ocaml.ocamldebugPath":{"type":"string","default":"ocamldebug","description":"Path to ocamldebug."},"ocaml.ocpIndentPath":{"type":"string","default":"ocp-indent","description":"Path to ocp-indent."},"ocaml.merlinPath":{"type":"string","default":"ocamlmerlin","description":"Path to ocamlmerlin."},"ocaml.lintOnChange":{"type":"boolean","default":true,"description":"Do lint when made changes."},"ocaml.lintOnSave":{"type":"boolean","default":false,"description":"Do lint when save document."},"ocaml.lintDelay":{"type":"number","default":500,"description":"Time to delay lint when made changes."},"ocaml.replPath.windows":{"type":"string","default":"ocaml.exe","description":"Path to OCaml REPL (eg. ocaml.exe, utop.exe ...) on Windows OS."},"ocaml.replPath.unix":{"type":"string","default":"ocaml","description":"Path to OCaml REPL (eg. ocaml, utop ...) on Unix-like OS."},"ocaml.replFocus":{"type":"boolean","default":false,"description":"Focus REPL terminal after send selection."},"ocaml.replNewline":{"type":"boolean","default":true,"description":"Append newline when send selection to REPL."}}},"configurationDefaults":{"[ocaml]":{"editor.tabSize":2,"editor.insertSpaces":true},"[ocamllex]":{"editor.tabSize":2,"editor.insertSpaces":true},"[menhir]":{"editor.tabSize":2,"editor.insertSpaces":true}}},"scripts":{"vscode:prepublish":"node ./node_modules/vscode/bin/compile","compile":"node ./node_modules/vscode/bin/compile -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"typescript":"^1.8.5","vscode":"^0.11.0"},"dependencies":{"compare-versions":"^3.0.1","freeport":"^1.0.5","get-stream":"^2.2.1","iconv-lite":"^0.4.13","tiny-promisify":"^0.1.1","vscode-debugadapter":"^1.20.0","vscode-debugprotocol":"^1.20.0"},"uuid":"585e998c-f7ad-46a3-8d1b-1e0f02cbb232","isBuiltin":false,"id":"hackwaly.ocaml","extensionFolderPath":"/root/.vscode/extensions/hackwaly.ocaml-0.6.43"},{"name":"cpptools","displayName":"C/C++","description":"C/C++ IntelliSense, debugging, and code browsing.","version":"0.16.1","publisher":"ms-vscode","preview":true,"icon":"LanguageCCPP_color_128x.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.17.0"},"bugs":{"url":"https://github.com/Microsoft/vscode-cpptools/issues","email":"c_cpp_support@microsoft.com"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-cpptools.git"},"homepage":"https://github.com/Microsoft/vscode-cpptools","qna":"https://github.com/Microsoft/vscode-cpptools/issues","keywords":["C","C++","IntelliSense","Microsoft","multi-root ready"],"categories":["Languages","Debuggers","Formatters","Linters"],"activationEvents":["onLanguage:cpp","onLanguage:c","onCommand:extension.pickNativeProcess","onCommand:extension.pickRemoteNativeProcess","onCommand:C_Cpp.ConfigurationEdit","onCommand:C_Cpp.ConfigurationSelect","onCommand:C_Cpp.SwitchHeaderSource","onCommand:C_Cpp.Navigate","onCommand:C_Cpp.GoToDeclaration","onCommand:C_Cpp.PeekDeclaration","onCommand:C_Cpp.ToggleErrorSquiggles","onCommand:C_Cpp.ToggleIncludeFallback","onCommand:C_Cpp.ToggleDimInactiveRegions","onCommand:C_Cpp.ShowReleaseNotes","onCommand:C_Cpp.ResetDatabase","onCommand:C_Cpp.PauseParsing","onCommand:C_Cpp.ResumeParsing","onCommand:C_Cpp.ShowParsingCommands","onCommand:C_Cpp.TakeSurvey","onDebug"],"main":"/root/.vscode/extensions/ms-vscode.cpptools-0.16.1/out/src/main","contributes":{"problemMatchers":[{"name":"gcc","owner":"cpptools","fileLocation":["relative","${workspaceFolder}"],"pattern":{"regexp":"^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$","file":1,"line":2,"column":3,"severity":4,"message":5}}],"configuration":{"type":"object","title":"C/C++ Configuration","properties":{"C_Cpp.clang_format_path":{"type":["string","null"],"default":null,"description":"The full path of the clang-format executable.","scope":"resource"},"C_Cpp.clang_format_style":{"type":"string","default":"file","description":"Coding style, currently supports: Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit. Use \"file\" to load the style from a .clang-format file in the current or parent directory. Use \"{key: value, ...}\" to set specific parameters, e.g.: \"{ BasedOnStyle: LLVM, IndentWidth: 8 }\"","scope":"resource"},"C_Cpp.clang_format_fallbackStyle":{"type":"string","default":"Visual Studio","description":"Name of the predefined style used as a fallback in case clang-format is invoked with style \"file\" but the .clang-format file is not found. Possible values are Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit, none, or use \"{key: value, ...}\" to set specific parameters, e.g.: \"{ BasedOnStyle: LLVM, IndentWidth: 8 }\"","scope":"resource"},"C_Cpp.clang_format_sortIncludes":{"type":["boolean","null"],"enum":[true,false,null],"default":null,"description":"If set, overrides the include sorting behavior determined by the SortIncludes parameter.","scope":"resource"},"C_Cpp.intelliSenseEngine":{"type":"string","enum":["Default","Tag Parser"],"default":"Default","description":"Controls the IntelliSense provider. \"Tag Parser\" provides \"fuzzy\" results that are not context-aware. \"Default\" provides context-aware results and is in preview mode - member list, hover tooltips, and error squiggles are currently implemented. Features not yet implemented in the new default engine will use the tag parser engine instead.","scope":"resource"},"C_Cpp.intelliSenseEngineFallback":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"Controls whether the IntelliSense engine will automatically switch to the Tag Parser for translation units containing #include errors.","scope":"resource"},"C_Cpp.autocomplete":{"type":"string","enum":["Default","Disabled"],"default":"Default","description":"Controls the auto-completion provider. \"Default\" uses the active IntelliSense engine. \"Disabled\" uses the word-based completion provided by Visual Studio Code.","scope":"resource"},"C_Cpp.errorSquiggles":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"Controls whether suspected compile errors detected by the IntelliSense engine will be reported back to the editor. Warnings about #includes that could not be located will always be reported to the editor. This setting is ignored by the Tag Parser engine.","scope":"resource"},"C_Cpp.dimInactiveRegions":{"type":"boolean","default":true,"description":"Controls whether inactive preprocessor blocks are colored differently than active code. This setting is ignored by the Tag Parser engine.","scope":"resource"},"C_Cpp.formatting":{"type":"string","enum":["Default","Disabled"],"default":"Default","description":"\"Default\" enables code formatting. \"Disabled\" disables code formatting.","scope":"resource"},"C_Cpp.navigation.length":{"type":"number","default":60,"description":"Maximum character length of the scope/navigation UI in the status bar. The UI may not appear if this value is too large.","scope":"resource"},"C_Cpp.loggingLevel":{"type":"string","enum":["None","Error","Warning","Information"],"default":"Error","description":"The verbosity of logging in the Output Panel. The order of levels from least verbose to most verbose is: None < Error < Warning < Information.","scope":"resource"},"C_Cpp.autoAddFileAssociations":{"type":"boolean","default":true,"description":"Controls whether files are automatically added to files.associations when they are the target of a navigation operation from a C/C++ file.","scope":"resource"},"C_Cpp.workspaceParsingPriority":{"type":"string","enum":["highest","high","medium","low"],"default":"highest","description":"Controls whether parsing of the non-active workspace files uses sleeps to avoid using 100% CPU. The values highest/high/medium/low correspond to approximately 100/75/50/25% CPU usage.","scope":"resource"},"C_Cpp.exclusionPolicy":{"type":"string","enum":["checkFolders","checkFilesAndFolders"],"default":"checkFolders","description":"Instructs the extension when to use the \"files.exclude\" setting when determining which files should be added to the code navigation database while traversing through the paths in the \"browse.path\" array. \"checkFolders\" means that the exclusion filters will only be evaluated once per folder (individual files are not checked). \"checkFilesAndFolders\" means that the exclusion filters will be evaluated against every file and folder encountered. If your \"files.exclude\" setting only contains folders, then \"checkFolders\" is the best choice and will increase the speed at which the extension can initialize the code navigation database.","scope":"resource"},"C_Cpp.commentContinuationPatterns":{"type":"array","default":["/**"],"items":{"anyOf":[{"type":"string","description":"The pattern that begins a multiline or single line comment block. The continuation pattern defaults to ' * ' for multiline comment blocks or this string for single line comment blocks."},{"type":"object","properties":{"begin":{"type":"string","description":"The pattern that begins a multiline or single line comment block."},"continue":{"type":"string","description":"The text that will be inserted on the next line when Enter is pressed inside a multiline or single line comment block."}}}]},"description":"Defines the editor behavior for when the Enter key is pressed inside a multiline or single line comment block.","scope":"resource"}}},"commands":[{"command":"C_Cpp.ConfigurationSelect","title":"Select a Configuration...","category":"C/Cpp"},{"command":"C_Cpp.ConfigurationEdit","title":"Edit Configurations...","category":"C/Cpp"},{"command":"C_Cpp.GoToDeclaration","title":"Go to Declaration","category":"C/Cpp"},{"command":"C_Cpp.PeekDeclaration","title":"Peek Declaration","category":"C/Cpp"},{"command":"C_Cpp.SwitchHeaderSource","title":"Switch Header/Source","category":"C/Cpp"},{"command":"C_Cpp.Navigate","title":"Navigate...","category":"C/Cpp"},{"command":"C_Cpp.ToggleErrorSquiggles","title":"Toggle Error Squiggles","category":"C/Cpp"},{"command":"C_Cpp.ToggleIncludeFallback","title":"Toggle IntelliSense Engine Fallback on Include Errors","category":"C/Cpp"},{"command":"C_Cpp.ToggleDimInactiveRegions","title":"Toggle Inactive Region Colorization","category":"C/Cpp"},{"command":"workbench.action.gotoSymbol","title":"Go to Symbol in File..."},{"command":"workbench.action.showAllSymbols","title":"Go to Symbol in Workspace..."},{"command":"C_Cpp.ShowReleaseNotes","title":"Show Release Notes","category":"C/Cpp"},{"command":"C_Cpp.ResetDatabase","title":"Reset IntelliSense Database","category":"C/Cpp"},{"command":"C_Cpp.PauseParsing","title":"Pause Parsing","category":"C/Cpp"},{"command":"C_Cpp.ResumeParsing","title":"Resume Parsing","category":"C/Cpp"},{"command":"C_Cpp.ShowParsingCommands","title":"Show Parsing Commands","category":"C/Cpp"},{"command":"C_Cpp.TakeSurvey","title":"Take Survey","category":"C/Cpp"}],"keybindings":[{"command":"C_Cpp.GoToDeclaration","key":"Ctrl+F12","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.GoToDeclaration","key":"Ctrl+F12","when":"editorTextFocus && editorLangId == 'c'"},{"command":"C_Cpp.PeekDeclaration","key":"Ctrl+Alt+F12","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.PeekDeclaration","key":"Ctrl+Alt+F12","when":"editorTextFocus && editorLangId == 'c'"},{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorTextFocus && editorLangId == 'c'"},{"command":"C_Cpp.Navigate","key":"Alt+N","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.Navigate","key":"Alt+N","when":"editorTextFocus && editorLangId == 'c'"}],"debuggers":[{"type":"cppdbg","label":"C++ (GDB/LLDB)","enableBreakpointsFor":{"languageIds":["c","cpp"]},"adapterExecutableCommand":"extension.cppdbgAdapterExecutableCommand","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","variables":{"pickProcess":"extension.pickNativeProcess","pickRemoteProcess":"extension.pickRemoteNativeProcess"},"configurationAttributes":{"launch":{"required":["name","type","request","program"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"type":{"enum":["cppdbg"],"description":"Type de configuration.","pattern":"^(?!node2)","errorMessage":"Le type de débogage n'est pas reconnu. Vérifiez que vous avez installé l'extension de débogage correspondante et qu'elle est activée.","patternErrorMessage":"\"node2\" n'est plus pris en charge. Utilisez \"node\" à la place, et affectez la valeur \"inspector\" à l'attribut \"protocol\"."},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"cwd":{"type":"string","description":"The working directory of the target","default":".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","properties":{"name":"string","value":"string"}},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"debugServerPath":{"type":"string","description":"Optional full path to debug server to launch. Defaults to null.","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched. Note this option is ignored in some cases for technical reasons.","default":false,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"${workspaceRoot}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example /usr/bin/gdb"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"name":{"type":"string","description":"Le nom de la configuration s'affiche dans le menu déroulant de la configuration de lancement.","default":"Launch","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"request":{"enum":["launch"],"description":"Type de requête de configuration. Il peut s'agir de \"launch\" ou \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"debugServer":{"type":"number","description":"Pour le développement d'une extension de débogage uniquement : si un port est spécifié, VS Code tente de se connecter à un adaptateur de débogage s'exécutant en mode serveur","default":4711,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"preLaunchTask":{"type":["string","null"],"default":null,"description":"Tâche à exécuter avant le démarrage de la session de débogage.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Contrôle le comportement de la console de débogage interne.","scope":1,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"windows":{"type":"object","description":"Attributs de configuration de lancement spécifiques à Windows.","properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"enum":["cppdbg"],"description":"Type de configuration.","pattern":"^(?!node2)","errorMessage":"Le type de débogage n'est pas reconnu. Vérifiez que vous avez installé l'extension de débogage correspondante et qu'elle est activée.","patternErrorMessage":"\"node2\" n'est plus pris en charge. Utilisez \"node\" à la place, et affectez la valeur \"inspector\" à l'attribut \"protocol\"."},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"cwd":{"type":"string","description":"The working directory of the target","default":"."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","properties":{"name":"string","value":"string"}},"default":[]},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"debugServerPath":{"type":"string","description":"Optional full path to debug server to launch. Defaults to null.","default":""},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":""},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":""},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000"},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched. Note this option is ignored in some cases for technical reasons.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"${workspaceRoot}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example /usr/bin/gdb"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"name":{"type":"string","description":"Le nom de la configuration s'affiche dans le menu déroulant de la configuration de lancement.","default":"Launch"},"request":{"enum":["launch"],"description":"Type de requête de configuration. Il peut s'agir de \"launch\" ou \"attach\"."},"debugServer":{"type":"number","description":"Pour le développement d'une extension de débogage uniquement : si un port est spécifié, VS Code tente de se connecter à un adaptateur de débogage s'exécutant en mode serveur","default":4711},"preLaunchTask":{"type":["string","null"],"default":null,"description":"Tâche à exécuter avant le démarrage de la session de débogage."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Contrôle le comportement de la console de débogage interne.","scope":1,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"osx":{"type":"object","description":"Attributs de configuration de lancement spécifiques à OS X.","properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"enum":["cppdbg"],"description":"Type de configuration.","pattern":"^(?!node2)","errorMessage":"Le type de débogage n'est pas reconnu. Vérifiez que vous avez installé l'extension de débogage correspondante et qu'elle est activée.","patternErrorMessage":"\"node2\" n'est plus pris en charge. Utilisez \"node\" à la place, et affectez la valeur \"inspector\" à l'attribut \"protocol\"."},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"cwd":{"type":"string","description":"The working directory of the target","default":"."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","properties":{"name":"string","value":"string"}},"default":[]},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"debugServerPath":{"type":"string","description":"Optional full path to debug server to launch. Defaults to null.","default":""},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":""},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":""},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000"},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched. Note this option is ignored in some cases for technical reasons.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"${workspaceRoot}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example /usr/bin/gdb"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"name":{"type":"string","description":"Le nom de la configuration s'affiche dans le menu déroulant de la configuration de lancement.","default":"Launch"},"request":{"enum":["launch"],"description":"Type de requête de configuration. Il peut s'agir de \"launch\" ou \"attach\"."},"debugServer":{"type":"number","description":"Pour le développement d'une extension de débogage uniquement : si un port est spécifié, VS Code tente de se connecter à un adaptateur de débogage s'exécutant en mode serveur","default":4711},"preLaunchTask":{"type":["string","null"],"default":null,"description":"Tâche à exécuter avant le démarrage de la session de débogage."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Contrôle le comportement de la console de débogage interne.","scope":1,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"linux":{"type":"object","description":"Attributs de configuration de lancement spécifiques à Linux.","properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"enum":["cppdbg"],"description":"Type de configuration.","pattern":"^(?!node2)","errorMessage":"Le type de débogage n'est pas reconnu. Vérifiez que vous avez installé l'extension de débogage correspondante et qu'elle est activée.","patternErrorMessage":"\"node2\" n'est plus pris en charge. Utilisez \"node\" à la place, et affectez la valeur \"inspector\" à l'attribut \"protocol\"."},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"cwd":{"type":"string","description":"The working directory of the target","default":"."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","properties":{"name":"string","value":"string"}},"default":[]},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"debugServerPath":{"type":"string","description":"Optional full path to debug server to launch. Defaults to null.","default":""},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":""},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":""},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000"},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched. Note this option is ignored in some cases for technical reasons.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"${workspaceRoot}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example /usr/bin/gdb"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"name":{"type":"string","description":"Le nom de la configuration s'affiche dans le menu déroulant de la configuration de lancement.","default":"Launch"},"request":{"enum":["launch"],"description":"Type de requête de configuration. Il peut s'agir de \"launch\" ou \"attach\"."},"debugServer":{"type":"number","description":"Pour le développement d'une extension de débogage uniquement : si un port est spécifié, VS Code tente de se connecter à un adaptateur de débogage s'exécutant en mode serveur","default":4711},"preLaunchTask":{"type":["string","null"],"default":null,"description":"Tâche à exécuter avant le démarrage de la session de débogage."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Contrôle le comportement de la console de débogage interne.","scope":1,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."}},"additionalProperties":false,"type":"object"},"attach":{"required":["name","type","request","program","processId"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"type":{"enum":["cppdbg"],"description":"Type de configuration.","pattern":"^(?!node2)","errorMessage":"Le type de débogage n'est pas reconnu. Vérifiez que vous avez installé l'extension de débogage correspondante et qu'elle est activée.","patternErrorMessage":"\"node2\" n'est plus pris en charge. Utilisez \"node\" à la place, et affectez la valeur \"inspector\" à l'attribut \"protocol\"."},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"${workspaceRoot}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example /usr/bin/gdb"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"name":{"type":"string","description":"Le nom de la configuration s'affiche dans le menu déroulant de la configuration de lancement.","default":"Launch","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"request":{"enum":["attach"],"description":"Type de requête de configuration. Il peut s'agir de \"launch\" ou \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"debugServer":{"type":"number","description":"Pour le développement d'une extension de débogage uniquement : si un port est spécifié, VS Code tente de se connecter à un adaptateur de débogage s'exécutant en mode serveur","default":4711,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"preLaunchTask":{"type":["string","null"],"default":null,"description":"Tâche à exécuter avant le démarrage de la session de débogage.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Contrôle le comportement de la console de débogage interne.","scope":1,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"windows":{"type":"object","description":"Attributs de configuration de lancement spécifiques à Windows.","properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"type":{"enum":["cppdbg"],"description":"Type de configuration.","pattern":"^(?!node2)","errorMessage":"Le type de débogage n'est pas reconnu. Vérifiez que vous avez installé l'extension de débogage correspondante et qu'elle est activée.","patternErrorMessage":"\"node2\" n'est plus pris en charge. Utilisez \"node\" à la place, et affectez la valeur \"inspector\" à l'attribut \"protocol\"."},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"${workspaceRoot}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example /usr/bin/gdb"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"name":{"type":"string","description":"Le nom de la configuration s'affiche dans le menu déroulant de la configuration de lancement.","default":"Launch"},"request":{"enum":["attach"],"description":"Type de requête de configuration. Il peut s'agir de \"launch\" ou \"attach\"."},"debugServer":{"type":"number","description":"Pour le développement d'une extension de débogage uniquement : si un port est spécifié, VS Code tente de se connecter à un adaptateur de débogage s'exécutant en mode serveur","default":4711},"preLaunchTask":{"type":["string","null"],"default":null,"description":"Tâche à exécuter avant le démarrage de la session de débogage."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Contrôle le comportement de la console de débogage interne.","scope":1,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"osx":{"type":"object","description":"Attributs de configuration de lancement spécifiques à OS X.","properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"type":{"enum":["cppdbg"],"description":"Type de configuration.","pattern":"^(?!node2)","errorMessage":"Le type de débogage n'est pas reconnu. Vérifiez que vous avez installé l'extension de débogage correspondante et qu'elle est activée.","patternErrorMessage":"\"node2\" n'est plus pris en charge. Utilisez \"node\" à la place, et affectez la valeur \"inspector\" à l'attribut \"protocol\"."},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"${workspaceRoot}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example /usr/bin/gdb"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"name":{"type":"string","description":"Le nom de la configuration s'affiche dans le menu déroulant de la configuration de lancement.","default":"Launch"},"request":{"enum":["attach"],"description":"Type de requête de configuration. Il peut s'agir de \"launch\" ou \"attach\"."},"debugServer":{"type":"number","description":"Pour le développement d'une extension de débogage uniquement : si un port est spécifié, VS Code tente de se connecter à un adaptateur de débogage s'exécutant en mode serveur","default":4711},"preLaunchTask":{"type":["string","null"],"default":null,"description":"Tâche à exécuter avant le démarrage de la session de débogage."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Contrôle le comportement de la console de débogage interne.","scope":1,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"linux":{"type":"object","description":"Attributs de configuration de lancement spécifiques à Linux.","properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"type":{"enum":["cppdbg"],"description":"Type de configuration.","pattern":"^(?!node2)","errorMessage":"Le type de débogage n'est pas reconnu. Vérifiez que vous avez installé l'extension de débogage correspondante et qu'elle est activée.","patternErrorMessage":"\"node2\" n'est plus pris en charge. Utilisez \"node\" à la place, et affectez la valeur \"inspector\" à l'attribut \"protocol\"."},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"${workspaceRoot}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example /usr/bin/gdb"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"name":{"type":"string","description":"Le nom de la configuration s'affiche dans le menu déroulant de la configuration de lancement.","default":"Launch"},"request":{"enum":["attach"],"description":"Type de requête de configuration. Il peut s'agir de \"launch\" ou \"attach\"."},"debugServer":{"type":"number","description":"Pour le développement d'une extension de débogage uniquement : si un port est spécifié, VS Code tente de se connecter à un adaptateur de débogage s'exécutant en mode serveur","default":4711},"preLaunchTask":{"type":["string","null"],"default":null,"description":"Tâche à exécuter avant le démarrage de la session de débogage."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Contrôle le comportement de la console de débogage interne.","scope":1,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."}},"additionalProperties":false,"type":"object"}}},{"type":"cppvsdbg","label":"C++ (Windows)","enableBreakpointsFor":{"languageIds":["c","cpp"]},"adapterExecutableCommand":"extension.cppvsdbgAdapterExecutableCommand","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","variables":{"pickProcess":"extension.pickNativeProcess"},"configurationAttributes":{"launch":{"required":["name","type","request","program","cwd"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/program.exe","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"type":{"enum":["cppvsdbg"],"description":"Type de configuration.","pattern":"^(?!node2)","errorMessage":"Le type de débogage n'est pas reconnu. Vérifiez que vous avez installé l'extension de débogage correspondante et qu'elle est activée.","patternErrorMessage":"\"node2\" n'est plus pris en charge. Utilisez \"node\" à la place, et affectez la valeur \"inspector\" à l'attribut \"protocol\"."},"cwd":{"type":"string","description":"The working directory of the target.","default":"${workspaceRoot}","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","properties":{"name":"string","value":"string"}},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"dumpPath":{"type":"string","description":"Optional full path to a dump file for the specified program. Example: \"c:\\temp\\app.dmp\". Defaults to null.","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched.","default":false,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"name":{"type":"string","description":"Le nom de la configuration s'affiche dans le menu déroulant de la configuration de lancement.","default":"Launch","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"request":{"enum":["launch"],"description":"Type de requête de configuration. Il peut s'agir de \"launch\" ou \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"debugServer":{"type":"number","description":"Pour le développement d'une extension de débogage uniquement : si un port est spécifié, VS Code tente de se connecter à un adaptateur de débogage s'exécutant en mode serveur","default":4711,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"preLaunchTask":{"type":["string","null"],"default":null,"description":"Tâche à exécuter avant le démarrage de la session de débogage.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Contrôle le comportement de la console de débogage interne.","scope":1,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"windows":{"type":"object","description":"Attributs de configuration de lancement spécifiques à Windows.","properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/program.exe"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"enum":["cppvsdbg"],"description":"Type de configuration.","pattern":"^(?!node2)","errorMessage":"Le type de débogage n'est pas reconnu. Vérifiez que vous avez installé l'extension de débogage correspondante et qu'elle est activée.","patternErrorMessage":"\"node2\" n'est plus pris en charge. Utilisez \"node\" à la place, et affectez la valeur \"inspector\" à l'attribut \"protocol\"."},"cwd":{"type":"string","description":"The working directory of the target.","default":"${workspaceRoot}"},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","properties":{"name":"string","value":"string"}},"default":[]},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"dumpPath":{"type":"string","description":"Optional full path to a dump file for the specified program. Example: \"c:\\temp\\app.dmp\". Defaults to null.","default":""},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}}},"name":{"type":"string","description":"Le nom de la configuration s'affiche dans le menu déroulant de la configuration de lancement.","default":"Launch"},"request":{"enum":["launch"],"description":"Type de requête de configuration. Il peut s'agir de \"launch\" ou \"attach\"."},"debugServer":{"type":"number","description":"Pour le développement d'une extension de débogage uniquement : si un port est spécifié, VS Code tente de se connecter à un adaptateur de débogage s'exécutant en mode serveur","default":4711},"preLaunchTask":{"type":["string","null"],"default":null,"description":"Tâche à exécuter avant le démarrage de la session de débogage."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Contrôle le comportement de la console de débogage interne.","scope":1,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"osx":{"type":"object","description":"Attributs de configuration de lancement spécifiques à OS X.","properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/program.exe"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"enum":["cppvsdbg"],"description":"Type de configuration.","pattern":"^(?!node2)","errorMessage":"Le type de débogage n'est pas reconnu. Vérifiez que vous avez installé l'extension de débogage correspondante et qu'elle est activée.","patternErrorMessage":"\"node2\" n'est plus pris en charge. Utilisez \"node\" à la place, et affectez la valeur \"inspector\" à l'attribut \"protocol\"."},"cwd":{"type":"string","description":"The working directory of the target.","default":"${workspaceRoot}"},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","properties":{"name":"string","value":"string"}},"default":[]},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"dumpPath":{"type":"string","description":"Optional full path to a dump file for the specified program. Example: \"c:\\temp\\app.dmp\". Defaults to null.","default":""},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}}},"name":{"type":"string","description":"Le nom de la configuration s'affiche dans le menu déroulant de la configuration de lancement.","default":"Launch"},"request":{"enum":["launch"],"description":"Type de requête de configuration. Il peut s'agir de \"launch\" ou \"attach\"."},"debugServer":{"type":"number","description":"Pour le développement d'une extension de débogage uniquement : si un port est spécifié, VS Code tente de se connecter à un adaptateur de débogage s'exécutant en mode serveur","default":4711},"preLaunchTask":{"type":["string","null"],"default":null,"description":"Tâche à exécuter avant le démarrage de la session de débogage."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Contrôle le comportement de la console de débogage interne.","scope":1,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"linux":{"type":"object","description":"Attributs de configuration de lancement spécifiques à Linux.","properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/program.exe"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"enum":["cppvsdbg"],"description":"Type de configuration.","pattern":"^(?!node2)","errorMessage":"Le type de débogage n'est pas reconnu. Vérifiez que vous avez installé l'extension de débogage correspondante et qu'elle est activée.","patternErrorMessage":"\"node2\" n'est plus pris en charge. Utilisez \"node\" à la place, et affectez la valeur \"inspector\" à l'attribut \"protocol\"."},"cwd":{"type":"string","description":"The working directory of the target.","default":"${workspaceRoot}"},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","properties":{"name":"string","value":"string"}},"default":[]},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"dumpPath":{"type":"string","description":"Optional full path to a dump file for the specified program. Example: \"c:\\temp\\app.dmp\". Defaults to null.","default":""},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}}},"name":{"type":"string","description":"Le nom de la configuration s'affiche dans le menu déroulant de la configuration de lancement.","default":"Launch"},"request":{"enum":["launch"],"description":"Type de requête de configuration. Il peut s'agir de \"launch\" ou \"attach\"."},"debugServer":{"type":"number","description":"Pour le développement d'une extension de débogage uniquement : si un port est spécifié, VS Code tente de se connecter à un adaptateur de débogage s'exécutant en mode serveur","default":4711},"preLaunchTask":{"type":["string","null"],"default":null,"description":"Tâche à exécuter avant le démarrage de la session de débogage."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Contrôle le comportement de la console de débogage interne.","scope":1,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."}},"additionalProperties":false,"type":"object"},"attach":{"required":["name","type","request","processId"],"properties":{"type":{"enum":["cppvsdbg"],"description":"Type de configuration.","pattern":"^(?!node2)","errorMessage":"Le type de débogage n'est pas reconnu. Vérifiez que vous avez installé l'extension de débogage correspondante et qu'elle est activée.","patternErrorMessage":"\"node2\" n'est plus pris en charge. Utilisez \"node\" à la place, et affectez la valeur \"inspector\" à l'attribut \"protocol\"."},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"name":{"type":"string","description":"Le nom de la configuration s'affiche dans le menu déroulant de la configuration de lancement.","default":"Launch","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"request":{"enum":["attach"],"description":"Type de requête de configuration. Il peut s'agir de \"launch\" ou \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"debugServer":{"type":"number","description":"Pour le développement d'une extension de débogage uniquement : si un port est spécifié, VS Code tente de se connecter à un adaptateur de débogage s'exécutant en mode serveur","default":4711,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"preLaunchTask":{"type":["string","null"],"default":null,"description":"Tâche à exécuter avant le démarrage de la session de débogage.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Contrôle le comportement de la console de débogage interne.","scope":1,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"windows":{"type":"object","description":"Attributs de configuration de lancement spécifiques à Windows.","properties":{"type":{"enum":["cppvsdbg"],"description":"Type de configuration.","pattern":"^(?!node2)","errorMessage":"Le type de débogage n'est pas reconnu. Vérifiez que vous avez installé l'extension de débogage correspondante et qu'elle est activée.","patternErrorMessage":"\"node2\" n'est plus pris en charge. Utilisez \"node\" à la place, et affectez la valeur \"inspector\" à l'attribut \"protocol\"."},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"name":{"type":"string","description":"Le nom de la configuration s'affiche dans le menu déroulant de la configuration de lancement.","default":"Launch"},"request":{"enum":["attach"],"description":"Type de requête de configuration. Il peut s'agir de \"launch\" ou \"attach\"."},"debugServer":{"type":"number","description":"Pour le développement d'une extension de débogage uniquement : si un port est spécifié, VS Code tente de se connecter à un adaptateur de débogage s'exécutant en mode serveur","default":4711},"preLaunchTask":{"type":["string","null"],"default":null,"description":"Tâche à exécuter avant le démarrage de la session de débogage."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Contrôle le comportement de la console de débogage interne.","scope":1,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"osx":{"type":"object","description":"Attributs de configuration de lancement spécifiques à OS X.","properties":{"type":{"enum":["cppvsdbg"],"description":"Type de configuration.","pattern":"^(?!node2)","errorMessage":"Le type de débogage n'est pas reconnu. Vérifiez que vous avez installé l'extension de débogage correspondante et qu'elle est activée.","patternErrorMessage":"\"node2\" n'est plus pris en charge. Utilisez \"node\" à la place, et affectez la valeur \"inspector\" à l'attribut \"protocol\"."},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"name":{"type":"string","description":"Le nom de la configuration s'affiche dans le menu déroulant de la configuration de lancement.","default":"Launch"},"request":{"enum":["attach"],"description":"Type de requête de configuration. Il peut s'agir de \"launch\" ou \"attach\"."},"debugServer":{"type":"number","description":"Pour le développement d'une extension de débogage uniquement : si un port est spécifié, VS Code tente de se connecter à un adaptateur de débogage s'exécutant en mode serveur","default":4711},"preLaunchTask":{"type":["string","null"],"default":null,"description":"Tâche à exécuter avant le démarrage de la session de débogage."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Contrôle le comportement de la console de débogage interne.","scope":1,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."},"linux":{"type":"object","description":"Attributs de configuration de lancement spécifiques à Linux.","properties":{"type":{"enum":["cppvsdbg"],"description":"Type de configuration.","pattern":"^(?!node2)","errorMessage":"Le type de débogage n'est pas reconnu. Vérifiez que vous avez installé l'extension de débogage correspondante et qu'elle est activée.","patternErrorMessage":"\"node2\" n'est plus pris en charge. Utilisez \"node\" à la place, et affectez la valeur \"inspector\" à l'attribut \"protocol\"."},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"name":{"type":"string","description":"Le nom de la configuration s'affiche dans le menu déroulant de la configuration de lancement.","default":"Launch"},"request":{"enum":["attach"],"description":"Type de requête de configuration. Il peut s'agir de \"launch\" ou \"attach\"."},"debugServer":{"type":"number","description":"Pour le développement d'une extension de débogage uniquement : si un port est spécifié, VS Code tente de se connecter à un adaptateur de débogage s'exécutant en mode serveur","default":4711},"preLaunchTask":{"type":["string","null"],"default":null,"description":"Tâche à exécuter avant le démarrage de la session de débogage."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Contrôle le comportement de la console de débogage interne.","scope":1,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"env.', 'config.' et 'command.' sont déconseillés. Utilisez 'env:', 'config:' et 'command:' à la place."}},"additionalProperties":false,"type":"object"}}}],"jsonValidation":[{"fileMatch":"c_cpp_properties.json","url":"./c_cpp_properties.schema.json"}],"menus":{"editor/context":[{"when":"editorLangId == c","command":"C_Cpp.GoToDeclaration","group":"navigation@2"},{"when":"editorLangId == cpp","command":"C_Cpp.GoToDeclaration","group":"navigation@2"},{"when":"editorLangId == c","command":"C_Cpp.PeekDeclaration","group":"navigation@3"},{"when":"editorLangId == cpp","command":"C_Cpp.PeekDeclaration","group":"navigation@3"},{"when":"editorLangId == c","command":"C_Cpp.SwitchHeaderSource","group":"other@1"},{"when":"editorLangId == cpp","command":"C_Cpp.SwitchHeaderSource","group":"other@1"},{"when":"editorLangId == c","command":"C_Cpp.Navigate","group":"other@2"},{"when":"editorLangId == cpp","command":"C_Cpp.Navigate","group":"other@2"},{"when":"editorLangId == c","command":"workbench.action.gotoSymbol","group":"other@3"},{"when":"editorLangId == cpp","command":"workbench.action.gotoSymbol","group":"other@3"},{"when":"editorLangId == c","command":"workbench.action.showAllSymbols","group":"other@4"},{"when":"editorLangId == cpp","command":"workbench.action.showAllSymbols","group":"other@4"}]},"configurationDefaults":{"[cpp]":{"editor.autoIndent":false},"[c]":{"editor.autoIndent":false}}},"scripts":{"compile":"npm run vscode:prepublish","integrationTests":"gulp integrationTests","postinstall":"node ./node_modules/vscode/bin/install","pretest":"tsc -p ./","test":"gulp allTests","tslint":"gulp tslint","unitTests":"gulp unitTests","vscode:prepublish":"node ./src/Support/prepublish.js","watch":"tsc -watch -p ./"},"devDependencies":{"@types/mocha":"^2.2.43","@types/node":"^8.0.46","gulp-env":"0.4.0","gulp-mocha":"5.0.0","gulp-tslint":"8.1.2","gulp":"3.9.1","mocha":"^4.0.1","tslint-microsoft-contrib":"5.0.1","tslint-no-unused-expression-chai":"0.0.3","tslint":"5.8.0","typescript":"^2.5.3","vscode":"^1.1.6"},"dependencies":{"http-proxy-agent":"~2.0.0","https-proxy-agent":"~2.1.0","jsonc-parser":"^1.0.0","minimatch":"~3.0.4","mkdirp":"~0.5.1","tmp":"~0.0.33","vscode-debugadapter":"~1.24.0","vscode-debugprotocol":"~1.24.0","vscode-extension-telemetry":"~0.0.11","vscode-languageclient":"~3.4.5","yauzl":"~2.8.0"},"runtimeDependencies":[{"description":"C/C++ language components (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?linkid=871264","platforms":["linux"],"architectures":["x86_64"],"binaries":["/root/.vscode/extensions/ms-vscode.cpptools-0.16.1/bin/Microsoft.VSCode.CPP.Extension.linux","/root/.vscode/extensions/ms-vscode.cpptools-0.16.1/bin/Microsoft.VSCode.CPP.IntelliSense.Msvc.linux"],"tmpFile":{"name":"/tmp/package-31305oPZgojcsG07O.tmp","fd":37}},{"description":"C/C++ language components (Linux / x86)","url":"https://go.microsoft.com/fwlink/?linkid=871265","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["/root/.vscode/extensions/ms-vscode.cpptools-0.16.1/bin/Microsoft.VSCode.CPP.Extension.linux","/root/.vscode/extensions/ms-vscode.cpptools-0.16.1/bin/Microsoft.VSCode.CPP.IntelliSense.Msvc.linux"]},{"description":"C/C++ language components (OS X)","url":"https://go.microsoft.com/fwlink/?linkid=871266","platforms":["darwin"],"binaries":["/root/.vscode/extensions/ms-vscode.cpptools-0.16.1/bin/Microsoft.VSCode.CPP.Extension.darwin","/root/.vscode/extensions/ms-vscode.cpptools-0.16.1/bin/Microsoft.VSCode.CPP.IntelliSense.Msvc.darwin"]},{"description":"C/C++ language components (Windows)","url":"https://go.microsoft.com/fwlink/?linkid=871267","platforms":["win32"],"binaries":[]},{"description":"ClangFormat (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkID=848955","platforms":["linux"],"architectures":["x86_64"],"binaries":["/root/.vscode/extensions/ms-vscode.cpptools-0.16.1/LLVM/bin/clang-format"],"tmpFile":{"name":"/tmp/package-31305WZSQYm26NyGQ.tmp","fd":33}},{"description":"ClangFormat (Linux / x86)","url":"https://go.microsoft.com/fwlink/?LinkID=864640","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["/root/.vscode/extensions/ms-vscode.cpptools-0.16.1/LLVM/bin/clang-format"]},{"description":"ClangFormat (OS X)","url":"https://go.microsoft.com/fwlink/?LinkID=848956","platforms":["darwin"],"binaries":["/root/.vscode/extensions/ms-vscode.cpptools-0.16.1/LLVM/bin/clang-format.darwin"]},{"description":"ClangFormat (Windows)","url":"https://go.microsoft.com/fwlink/?LinkID=848957","platforms":["win32"],"binaries":[]},{"description":"Mono Framework Assemblies","url":"https://go.microsoft.com/fwlink/?LinkId=816539","platforms":["linux","darwin"],"binaries":[],"tmpFile":{"name":"/tmp/package-31305wcVTXv4fNBJw.tmp","fd":51}},{"description":"Mono Runtime (Linux / x86)","url":"https://go.microsoft.com/fwlink/?LinkId=816540","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["/root/.vscode/extensions/ms-vscode.cpptools-0.16.1/debugAdapters/mono.linux-x86"]},{"description":"Mono Runtime (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkId=816541","platforms":["linux"],"architectures":["x86_64"],"binaries":["/root/.vscode/extensions/ms-vscode.cpptools-0.16.1/debugAdapters/mono.linux-x86_64"],"tmpFile":{"name":"/tmp/package-31305NECwJj4NbUnq.tmp","fd":57}},{"description":"Mono Runtime (OS X)","url":"https://go.microsoft.com/fwlink/?LinkId=816542","platforms":["darwin"],"binaries":["/root/.vscode/extensions/ms-vscode.cpptools-0.16.1/debugAdapters/mono.osx"]},{"description":"LLDB 3.8.0 (OS X)","url":"https://go.microsoft.com/fwlink/?LinkID=817244","platforms":["darwin"],"binaries":["/root/.vscode/extensions/ms-vscode.cpptools-0.16.1/debugAdapters/lldb/bin/debugserver","/root/.vscode/extensions/ms-vscode.cpptools-0.16.1/debugAdapters/lldb/bin/lldb-mi","/root/.vscode/extensions/ms-vscode.cpptools-0.16.1/debugAdapters/lldb/bin/lldb-argdumper","/root/.vscode/extensions/ms-vscode.cpptools-0.16.1/debugAdapters/lldb/bin/lldb-launcher"]},{"description":"Visual Studio Windows Debugger","url":"https://go.microsoft.com/fwlink/?linkid=852926","platforms":["win32"],"binaries":[]}],"uuid":"690b692e-e8a9-493f-b802-8089d50ac1b2","isBuiltin":false,"id":"ms-vscode.cpptools","extensionFolderPath":"/root/.vscode/extensions/ms-vscode.cpptools-0.16.1"},{"name":"vscode-code-outline","displayName":"Code Outline","description":"A code outline tree provider for VSCode","version":"0.0.13","publisher":"patrys","homepage":"https://github.com/patrys/vscode-code-outline","repository":{"type":"git","url":"https://github.com/patrys/vscode-code-outline"},"icon":"resources/icon.png","galleryBanner":{"color":"#292d3e","theme":"dark"},"engines":{"vscode":"^1.16.0"},"categories":["Other"],"activationEvents":["onView:symbolOutline"],"main":"/root/.vscode/extensions/patrys.vscode-code-outline-0.0.13/out/src/extension","contributes":{"commands":[{"command":"symbolOutline.refresh","title":"Refresh","icon":{"dark":"resources/dark/icon-refresh.svg","light":"resources/light/icon-refresh.svg"}}],"views":{"explorer":[{"id":"symbolOutline","name":"Code Outline"}]},"menus":{"view/title":[{"command":"symbolOutline.refresh","when":"view == symbolOutline","group":"navigation"}]},"configuration":{"type":"object","title":"Code Outline configuration","properties":{"symbolOutline.doSort":{"type":"boolean","default":false,"description":"Sort the outline"},"symbolOutline.expandNodes":{"type":"array","default":["Module","Class","Interface","Namespace","Object","Package","Struct"],"description":"Kinds of nodes to be expanded automatically."},"symbolOutline.doSelect":{"type":"boolean","default":true,"description":"Select the code segment by selecting item."},"symbolOutline.sortOrder":{"type":"array","default":["Class","Module","Constant","Interface","*","Constructor","Function","Method"],"description":"Order to the sort symbols in, if sorted.  * is placeholder for all symbols not explicitly listed."},"symbolOutline.topLevel":{"type":"array","default":["*"],"description":"Which symbols to include at the topmost scope.  * includes everything."}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"devDependencies":{"typescript":"^2.0.3","vscode":"^1.0.0","mocha":"^2.3.3","@types/node":"^6.0.40","@types/mocha":"^2.2.32"},"uuid":"d960eabf-f421-4568-8be0-2633af2c37b0","isBuiltin":false,"id":"patrys.vscode-code-outline","extensionFolderPath":"/root/.vscode/extensions/patrys.vscode-code-outline-0.0.13"},{"name":"java","displayName":"Language Support for Java(TM) by Red Hat","description":"Language Support for Java(TM) for Visual Studio Code provided by Red Hat","author":"Red Hat","icon":"icons/icon128.png","license":"EPL-1.0","version":"0.23.0","publisher":"redhat","bugs":"https://github.com/redhat-developer/vscode-java/issues","preview":true,"engines":{"vscode":"^1.15.0"},"repository":{"type":"git","url":"https://github.com/redhat-developer/vscode-java"},"categories":["Languages","Linters"],"keywords":["multi-root ready"],"activationEvents":["onLanguage:java","onCommand:java.show.references","onCommand:java.show.implementations","onCommand:java.open.output","onCommand:java.open.serverLog","onCommand:java.execute.workspaceCommand","onCommand:java.projectConfiguration.update","workspaceContains:pom.xml","workspaceContains:build.gradle"],"main":"/root/.vscode/extensions/redhat.java-0.23.0/out/src/extension","contributes":{"languages":[{"id":"java","extensions":[".class"],"configuration":"./language-configuration.json"}],"snippets":[{"language":"java","path":"./snippets/java.json"}],"configuration":{"type":"object","title":"Java configuration","properties":{"java.home":{"type":["string","null"],"default":null,"description":"Specifies the folder path to the JDK (8 or more recent) used to launch the Java Language Server.\nOn Windows, backslashes must be escaped, i.e.\n\"java.home\":\"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_161\"","scope":"window"},"java.jdt.ls.vmargs":{"type":["string","null"],"default":"-noverify -Xmx1G -XX:+UseG1GC -XX:+UseStringDeduplication","description":"Specifies extra VM arguments used to launch the Java Language Server. Eg. use `-noverify -Xmx1G  -XX:+UseG1GC -XX:+UseStringDeduplication` to bypass class verification, increase the heap size to 1GB and enable String deduplication with the G1 Garbage collector","scope":"window"},"java.errors.incompleteClasspath.severity":{"type":["string"],"enum":["ignore","info","warning","error"],"default":"warning","description":"Specifies the severity of the message when the classpath is incomplete for a Java file","scope":"window"},"java.configuration.updateBuildConfiguration":{"type":["string"],"enum":["disabled","interactive","automatic"],"default":"interactive","description":"Specifies how modifications on build files update the Java classpath/configuration","scope":"window"},"java.trace.server":{"type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the Java language server.","scope":"window"},"java.import.gradle.enabled":{"type":"boolean","default":true,"description":"Enable/disable the Gradle importer.","scope":"window"},"java.import.maven.enabled":{"type":"boolean","default":true,"description":"Enable/disable the Maven importer.","scope":"window"},"java.referencesCodeLens.enabled":{"type":"boolean","default":false,"description":"Enable/disable the references code lens.","scope":"window"},"java.signatureHelp.enabled":{"type":"boolean","default":false,"description":"Enable/disable the signature help.","scope":"window"},"java.implementationsCodeLens.enabled":{"type":"boolean","default":false,"description":"Enable/disable the implementations code lens.","scope":"window"},"java.configuration.maven.userSettings":{"type":"string","default":null,"description":"Absolute path to Maven's settings.xml","scope":"window"},"java.format.enabled":{"type":"boolean","default":true,"description":"Enable/disable default Java formatter","scope":"window"},"java.saveActions.organizeImports":{"type":"boolean","default":false,"description":"Enable/disable auto organize imports on save action","scope":"window"},"java.import.exclusions":{"type":"array","description":"Configure glob patterns for excluding folders","default":["**/node_modules/**","**/.metadata/**","**/archetype-resources/**","**/META-INF/maven/**"],"scope":"window"},"java.contentProvider.preferred":{"type":"string","description":"Preferred content provider (a 3rd party decompiler id, usually)","default":null,"scope":"window"},"java.autobuild.enabled":{"type":"boolean","default":true,"description":"Enable/disable the 'auto build'","scope":"window"},"java.completion.overwrite":{"type":"boolean","default":true,"description":"When set to true, code completion overwrites the current text. When set to false, code is simply added instead.","scope":"window"},"java.completion.favoriteStaticMembers":{"type":"array","description":"Defines a list of static members or types with static members. Content assist will propose those static members even if the import is missing.","default":["org.junit.Assert.*","org.junit.Assume.*","org.junit.jupiter.api.Assertions.*","org.junit.jupiter.api.Assumptions.*","org.junit.jupiter.api.DynamicContainer.*","org.junit.jupiter.api.DynamicTest.*"],"scope":"window"},"java.completion.importOrder":{"type":"array","description":"Defines the sorting order of import statements. A package or type name prefix (e.g. 'org.eclipse') is a valid entry. An import is always added to the most specific group.","default":["java","javax","com","org"],"scope":"window"},"java.progressReports.enabled":{"type":"boolean","description":"[Experimental] Enable/disable progress reports from background processes on the server.","default":true,"scope":"window"}}},"commands":[{"command":"java.projectConfiguration.update","title":"Update project configuration","category":"Java"},{"command":"java.open.serverLog","title":"Open Java Language Server log file","category":"Java"},{"command":"java.workspace.compile","title":"Force Java compilation","category":"Java"},{"command":"java.edit.organizeImports","title":"Organize Imports","category":"Java"}],"keybindings":[{"command":"java.projectConfiguration.update","key":"shift+alt+u","when":"editorFocus"},{"command":"java.edit.organizeImports","key":"shift+alt+o","when":"editorTextFocus && !editorReadonly && editorLangId == java"},{"command":"java.workspace.compile","key":"shift+alt+b"}],"menus":{"explorer/context":[{"command":"java.projectConfiguration.update","when":"resourceFilename =~ /(.*\\.gradle)|(pom.xml)$/","group":"1_javaactions"}],"editor/context":[{"command":"java.edit.organizeImports","when":"resourceLangId == java","group":"1_javaactions"},{"command":"java.projectConfiguration.update","when":"resourceFilename =~ /(.*\\.gradle)|(pom.xml)$/","group":"1_javaactions"}],"commandPalette":[{"command":"java.edit.organizeImports","when":"!editorReadonly && editorLangId == java"}]}},"scripts":{"vscode:prepublish":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test","build-server":"./node_modules/.bin/gulp build_server","watch-server":"./node_modules/.bin/gulp watch_server","tslint":"./node_modules/.bin/gulp tslint"},"devDependencies":{"typescript":"^2.3.4","vscode":"^1.1.4","mocha":"^3.2.0","@types/node":"^6.0.40","@types/mocha":"^2.2.39","@types/glob":"5.0.30","gulp":"^3.9.1","gulp-tslint":"^8.1.1","tslint":"^5.5.0","gulp-decompress":"2.0.1","gulp-download":"0.0.1"},"dependencies":{"vscode-languageclient":"^3.5.0","find-java-home":"0.1.4","tmp":"^0.0.31","path-exists":"^3.0.0","expand-home-dir":"^0.0.3","glob":"^7.1.1"},"uuid":"198a707e-28af-4e84-8610-6e2f628dd12d","isBuiltin":false,"id":"redhat.java","extensionFolderPath":"/root/.vscode/extensions/redhat.java-0.23.0"},{"name":"vscode-java-debug","displayName":"Debugger for Java","description":"A lightweight Java debugger for Visual Studio Code","version":"0.8.0","publisher":"vscjava","preview":true,"aiKey":"26e39823-0967-4af2-acc9-4d111ffda880","icon":"logo.png","keywords":["java","debug","debugging","debugger"],"engines":{"vscode":"^1.19.0"},"license":"SEE LICENSE IN LICENSE.txt","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-java-debug.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-java-debug/issues"},"homepage":"https://github.com/Microsoft/vscode-java-debug/blob/master/README.md","categories":["Debuggers"],"activationEvents":["onLanguage:java","onDebugInitialConfigurations","onDebugResolve:java","onCommand:JavaDebug.SpecifyProgramArgs"],"main":"/root/.vscode/extensions/vscjava.vscode-java-debug-0.8.0/out/src/extension","contributes":{"javaExtensions":["./server/com.microsoft.java.debug.plugin-0.8.0.jar"],"commands":[],"debuggers":[{"type":"java","label":"Java","enableBreakpointsFor":{"languageIds":["java"]},"variables":{"SpecifyProgramArgs":"JavaDebug.SpecifyProgramArgs"},"configurationAttributes":{"launch":{"required":["mainClass"],"properties":{"projectName":{"type":"string","description":"The preferred project in which the debugger searches for classes. There could be duplicated class names in different projects. This setting also works when the debugger looks for the specified main class when launching a program. It is required for expression evaluation.","default":""},"mainClass":{"type":"string","description":"The main class of the program (fully qualified name, e.g. [mymodule/]com.xyz.MainClass).","default":""},"args":{"type":"string","description":"The command line arguments passed to the program.","default":""},"vmArgs":{"type":"string","description":"The extra options and system properties for the JVM (e.g. -Xms<size> -Xmx<size> -D<name>=<value>).","default":""},"modulePaths":{"type":"array","items":{"type":"string"},"description":"The modulepaths for launching the JVM. If not specified, the debugger will automatically resolve from current project.","default":[]},"classPaths":{"type":"array","items":{"type":"string"},"description":"The classpaths for launching the JVM. If not specified, the debugger will automatically resolve from current project.","default":[]},"sourcePaths":{"type":"array","items":{"type":"string"},"description":"The extra source directories of the program. The debugger looks for source code from project settings by default. This option allows the debugger to look for source code in extra directories.","default":[]},"encoding":{"type":"string","description":"The file.encoding setting for the JVM. If not specified, 'UTF-8' will be used. Possible values can be found in http://docs.oracle.com/javase/8/docs/technotes/guides/intl/encoding.doc.html.","default":"UTF-8"},"cwd":{"type":"string","description":"The working directory of the program.","default":"${workspaceFolder}"},"env":{"type":"object","description":"The extra environment variables for the program.","default":{}},"stopOnEntry":{"type":"boolean","description":"Automatically pause the program after launching.","default":true},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code debug console (input stream not supported).","VS Code integrated terminal.","External terminal that can be configured in user settings."],"description":"The specified console to launch the program.","default":"internalConsole"},"stepFilters":{"type":"object","description":"Skip specified classes or methods when stepping.","default":{"classNameFilters":["java.*","javax.*","com.sun.*","sun.*","sunw.*","org.omg.*"],"skipSynthetics":false,"skipStaticInitializers":false,"skipConstructors":false},"properties":{"classNameFilters":{"type":"array","description":"Skip the specified classes when stepping. Class names should be fully qualified. Wildcard is supported.","item":{"type":"string"},"default":["java.*","javax.*","com.sun.*","sun.*","sunw.*","org.omg.*"]},"skipSynthetics":{"type":"boolean","description":"Skip synthetic methods when stepping.","default":true},"skipStaticInitializers":{"type":"boolean","description":"Skip static initializer methods when stepping.","default":true},"skipConstructors":{"type":"boolean","description":"Skip constructor methods when stepping.","default":true}}}}},"attach":{"required":["hostName","port"],"properties":{"hostName":{"type":"string","default":"localhost","description":"The host name or ip address of remote debuggee."},"port":{"type":"number","description":"The debug port of remote debuggee."},"timeout":{"type":"number","default":30000,"description":"Timeout value before reconnecting, in milliseconds (default to 30000ms)."},"sourcePaths":{"type":"array","items":{"type":"string"},"default":[],"description":"The extra source directories of the program. The debugger looks for source code from project settings by default. This option allows the debugger to look for source code in extra directories."},"projectName":{"type":"string","description":"The preferred project in which the debugger searches for classes. There could be duplicated class names in different projects.","default":""},"stepFilters":{"type":"object","description":"Skip specified classes or methods when stepping.","default":{"classNameFilters":["java.*","javax.*","com.sun.*","sun.*","sunw.*","org.omg.*"],"skipSynthetics":false,"skipStaticInitializers":false,"skipConstructors":false},"properties":{"classNameFilters":{"type":"array","description":"Skip the specified classes when stepping. Class names should be fully qualified. Wildcard is supported.","item":{"type":"string"},"default":["java.*","javax.*","com.sun.*","sun.*","sunw.*","org.omg.*"]},"skipSynthetics":{"type":"boolean","description":"Skip synthetic methods when stepping.","default":false},"skipStaticInitializers":{"type":"boolean","description":"Skip static initializer methods when stepping.","default":false},"skipConstructors":{"type":"boolean","description":"Skip constructor methods when stepping.","default":false}}}}}},"configurationSnippets":[{"label":"Java: Launch Program","description":"Add a new configuration for launching a java program.","body":{"type":"java","name":"Debug (Launch)","request":"launch","cwd":"^\"\\${workspaceFolder}\"","console":"internalConsole","stopOnEntry":false,"mainClass":"","args":""}},{"label":"Java: Launch Program with Arguments Prompt","description":"Add a new configuration for launching a java program with arguments prompt.","body":{"type":"java","name":"Debug (Launch) with Arguments Prompt","request":"launch","cwd":"^\"\\${workspaceFolder}\"","console":"internalConsole","stopOnEntry":false,"mainClass":"","args":"^\"\\${command:SpecifyProgramArgs}\""}},{"label":"Java: Attach to Remote Program","description":"Add a new configuration for attaching to a running java program.","body":{"type":"java","name":"Debug (Attach)","request":"attach","hostName":"localhost","port":0}}]}],"configuration":{"type":"object","title":"Java Debugger Configuration","properties":{"java.debug.logLevel":{"type":"string","default":"warn","description":"minimum level of debugger logs that are sent to VS Code","enum":["error","warn","info","verbose"]},"java.debug.settings.showHex":{"type":"boolean","description":"show numbers in hex format in \"Variables\" viewlet.","default":false},"java.debug.settings.showStaticVariables":{"type":"boolean","description":"show static variables in \"Variables\" viewlet","default":true},"java.debug.settings.showQualifiedNames":{"type":"boolean","description":"show fully qualified class names in \"Variables\" viewlet","default":false},"java.debug.settings.maxStringLength":{"type":"number","description":"the maximum length of string displayed in \"Variables\" or \"Debug Console\" viewlet, the string longer than this length will be trimmed, defaults to 0 which means no trim is performed.","default":0},"java.debug.settings.enableHotCodeReplace":{"type":"boolean","description":"Enable hot code replace for Java code","default":true}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"extensionDependencies":["redhat.java"],"devDependencies":{"@types/mocha":"^2.2.32","@types/node":"^6.0.40","gulp":"^3.9.1","gulp-tslint":"^8.1.2","mocha":"^2.3.3","tslint":"^5.7.0","typescript":"^2.0.3","vscode":"^1.1.6"},"dependencies":{"vscode-extension-telemetry":"0.0.8"},"uuid":"61fcd0cf-64d7-4836-8d6b-d55f4fb83281","isBuiltin":false,"id":"vscjava.vscode-java-debug","extensionFolderPath":"/root/.vscode/extensions/vscjava.vscode-java-debug-0.8.0"},{"name":"vscode-java-pack","displayName":"Java Extension Pack","description":"Popular VS Code extensions for Java development.","version":"0.3.0","publisher":"vscjava","preview":true,"engines":{"vscode":"^1.15.0"},"icon":"logo.png","galleryBanner":{"color":"#333333","theme":"dark"},"keywords":["java","debugger"],"categories":["Extension Packs"],"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-java-pack"},"homepage":"https://github.com/Microsoft/vscode-java-pack","bugs":{"url":"https://github.com/Microsoft/vscode-java-pack"},"extensionDependencies":["redhat.java","vscjava.vscode-java-debug","vscjava.vscode-java-test","vscjava.vscode-maven"],"uuid":"96f11e1f-1a46-4592-b084-f025b2c2a81f","isBuiltin":false,"id":"vscjava.vscode-java-pack","extensionFolderPath":"/root/.vscode/extensions/vscjava.vscode-java-pack-0.3.0"}]}